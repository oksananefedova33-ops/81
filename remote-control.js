(function(){
    'use strict';
    
    let currentApiToken = '';
    let selectedDomains = [];
    let currentFileUrl = '';
    let currentLinkUrl = '';
    
    // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –º–æ–¥–∞–ª–∫—É
    function createRemoteModal() {
        if (document.getElementById('remoteModal')) {
            document.getElementById('remoteModal').classList.remove('hidden');
            return;
        }
        
        const modal = document.createElement('div');
        modal.id = 'remoteModal';
        modal.className = 'rc-modal-backdrop';
        modal.innerHTML = `
            <div class="rc-modal">
                <div class="rc-modal-header">
                    <h3>üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ —Å–∞–π—Ç–∞–º–∏</h3>
                    <button class="rc-close">&times;</button>
                </div>
                <div class="rc-modal-body">
                    <!-- –í–∫–ª–∞–¥–∫–∏ -->
                    <div class="rc-tabs">
                        <button class="rc-tab active" data-tab="sites">–°–∞–π—Ç—ã</button>
                        <button class="rc-tab" data-tab="files">–ó–∞–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤</button>
                        <button class="rc-tab" data-tab="links">–ó–∞–º–µ–Ω–∞ —Å—Å—ã–ª–æ–∫</button>
                        <button class="rc-tab" data-tab="history">–ò—Å—Ç–æ—Ä–∏—è</button>
                    </div>
                    
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ -->
                    <div class="rc-tab-content" id="tab-sites">
                        <div class="rc-section">
                            <h4>API —Ç–æ–∫–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</h4>
                            <div class="rc-token-group">
                                <input type="text" id="rcApiToken" readonly>
                                <button class="rc-btn" id="copyTokenBtn">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
                                <button class="rc-btn danger" id="regenerateTokenBtn">üîÑ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω</button>
                            </div>
                            <small style="color: #6b7280;">–≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Å–∞–π—Ç–∞ —Å –æ–ø—Ü–∏–µ–π "–£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"</small>
                        </div>
                        
                        <div class="rc-section">
                            <h4>–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç:</h4>
                            <div class="rc-add-site">
                                <input type="text" id="rcNewDomain" placeholder="example.com">
                                <input type="text" id="rcNewSiteName" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞">
                                <button class="rc-btn primary" id="addSiteBtn">‚ûï –î–æ–±–∞–≤–∏—Ç—å</button>
                            </div>
                        </div>
                        
                        <div class="rc-section">
                            <h4>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∞–π—Ç—ã:</h4>
                            <div id="rcSitesList" class="rc-sites-list">
                                <p style="color: #6b7280;">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="rc-tab-content hidden" id="tab-files">
                        <div class="rc-section">
                            <h4>–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏:</h4>
                            <div id="rcFileSitesList" class="rc-sites-checkboxes">
                                <p style="color: #6b7280;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∞–π—Ç–æ–≤</p>
                            </div>
                        </div>
                        
                        <div class="rc-section">
                            <button class="rc-btn primary" id="showAllFilesBtn" style="width: 100%;">
                                üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö
                            </button>
                        </div>
                        
                        <div id="rcAllFilesList" class="rc-results" style="display: none;">
                            <h4>–§–∞–π–ª—ã –Ω–∞ —Å–∞–π—Ç–∞—Ö:</h4>
                            <div id="rcAllFilesContent"></div>
                        </div>
                        
                        <div class="rc-section">
                            <h4>–ò–ª–∏ –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª:</h4>
                            <div style="display: flex; gap: 8px;">
                                <input type="text" id="rcFindFile" placeholder="/assets/uploads/document.pdf" style="flex: 1;">
                                <button class="rc-btn" id="searchFilesBtn">üîç –ù–∞–π—Ç–∏</button>
                            </div>
                        </div>
                        
                        <div id="rcFileResults" class="rc-results"></div>
                        
                        <div class="rc-section hidden" id="rcReplaceFileSection">
                            <h4>–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω–æ–≤—ã–π —Ñ–∞–π–ª:</h4>
                            <div style="display: flex; gap: 8px; margin-bottom: 8px;">
                                <input type="file" id="rcNewFile" style="flex: 1;">
                            </div>
                            <div style="display: flex; gap: 8px;">
                                <input type="text" id="rcNewFileUrl" placeholder="–ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ URL —Ñ–∞–π–ª–∞" style="flex: 1;">
                                <button class="rc-btn primary" id="replaceFileBtn">üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª</button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="rc-tab-content hidden" id="tab-links">
                        <div class="rc-section">
                            <h4>–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:</h4>
                            <div id="rcLinkSitesList" class="rc-sites-checkboxes">
                                <p style="color: #6b7280;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∞–π—Ç–æ–≤</p>
                            </div>
                        </div>
                        
                        <div class="rc-section">
                            <button class="rc-btn primary" id="showAllLinksBtn" style="width: 100%;">
                                üîó –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö
                            </button>
                        </div>
                        
                        <div id="rcAllLinksList" class="rc-results" style="display: none;">
                            <h4>–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç–∞—Ö:</h4>
                            <div id="rcAllLinksContent"></div>
                        </div>
                        
                        <div class="rc-section">
                            <h4>–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –≤—Ä—É—á–Ω—É—é:</h4>
                            <div style="margin-bottom: 12px;">
                                <label style="color: #9ca3af;">–°—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞:</label>
                                <input type="text" id="rcOldLink" placeholder="https://old-site.com" style="width: 100%;">
                            </div>
                            <div style="margin-bottom: 12px;">
                                <label style="color: #9ca3af;">–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞:</label>
                                <input type="text" id="rcNewLink" placeholder="https://new-site.com" style="width: 100%;">
                            </div>
                            <button class="rc-btn primary" id="replaceLinkBtn">üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫–∏</button>
                        </div>
                        
                        <div id="rcLinkResults" class="rc-results"></div>
                    </div>
                    
                    <div class="rc-tab-content hidden" id="tab-history">
                        <div class="rc-section">
                            <div class="rc-history-controls">
                                <button class="rc-btn" id="refreshHistoryBtn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
                                <button class="rc-btn danger" id="clearHistoryBtn">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ (>30 –¥–Ω–µ–π)</button>
                            </div>
                            <div id="rcHistoryList" class="rc-history">
                                <p style="color: #6b7280;">–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        bindEventHandlers();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        loadApiToken();
        loadSites();
    }
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function bindEventHandlers() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
        document.querySelector('#remoteModal .rc-close').addEventListener('click', closeRemoteModal);
        document.getElementById('remoteModal').addEventListener('click', function(e) {
            if (e.target === this) closeRemoteModal();
        });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('#remoteModal .rc-tab').forEach(tab => {
            tab.addEventListener('click', () => switchTab(tab.dataset.tab));
        });
        
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–°–∞–π—Ç—ã"
        document.getElementById('copyTokenBtn').addEventListener('click', copyApiToken);
        document.getElementById('regenerateTokenBtn').addEventListener('click', regenerateToken);
        document.getElementById('addSiteBtn').addEventListener('click', addRemoteSite);
        
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–§–∞–π–ª—ã"
        document.getElementById('showAllFilesBtn').addEventListener('click', showAllFiles);
        document.getElementById('searchFilesBtn').addEventListener('click', searchRemoteFiles);
        document.getElementById('replaceFileBtn').addEventListener('click', replaceRemoteFile);
        
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–°—Å—ã–ª–∫–∏"
        document.getElementById('showAllLinksBtn').addEventListener('click', showAllLinks);
        document.getElementById('replaceLinkBtn').addEventListener('click', replaceRemoteLinks);
        
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–ò—Å—Ç–æ—Ä–∏—è"
        document.getElementById('refreshHistoryBtn').addEventListener('click', loadHistory);
        document.getElementById('clearHistoryBtn').addEventListener('click', clearOldHistory);
        
        // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è input file
        document.getElementById('rcNewFile').addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                document.getElementById('rcNewFileUrl').value = '';
                document.getElementById('rcNewFileUrl').disabled = true;
            } else {
                document.getElementById('rcNewFileUrl').disabled = false;
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ñ–∞–π–ª–∞
    function getFileIcon(fileName) {
        if(!fileName) return 'üìÑ';
        const ext = fileName.split('.').pop().toLowerCase();
        
        if(['zip','rar','7z','tar','gz','bz2'].includes(ext)) return 'üì¶';
        if(['pdf'].includes(ext)) return 'üìï';
        if(['doc','docx'].includes(ext)) return 'üìò';
        if(['xls','xlsx'].includes(ext)) return 'üìó';
        if(['ppt','pptx'].includes(ext)) return 'üìô';
        if(['mp3','wav','ogg','aac','flac'].includes(ext)) return 'üéµ';
        if(['mp4','avi','mkv','mov','webm'].includes(ext)) return 'üé¨';
        if(['jpg','jpeg','png','gif','svg','webp'].includes(ext)) return 'üñºÔ∏è';
        if(['js','json','xml','html','css','php','py'].includes(ext)) return 'üíª';
        if(['exe','apk','dmg','deb'].includes(ext)) return 'üíø';
        if(['txt','md','csv'].includes(ext)) return 'üìù';
        
        return 'üìÑ';
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    function switchTab(tabName) {
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        document.querySelectorAll('#remoteModal .rc-tab').forEach(tab => {
            tab.classList.toggle('active', tab.dataset.tab === tabName);
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        document.querySelectorAll('#remoteModal .rc-tab-content').forEach(content => {
            const contentId = 'tab-' + tabName;
            content.classList.toggle('hidden', content.id !== contentId);
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if (tabName === 'history') {
            loadHistory();
        } else if (tabName === 'files' || tabName === 'links') {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏ —Å–∞–π—Ç–æ–≤
            loadSites();
        }
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
    function closeRemoteModal() {
        const modal = document.getElementById('remoteModal');
        if (modal) {
            modal.classList.add('hidden');
        }
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ API —Ç–æ–∫–µ–Ω–∞
    async function loadApiToken() {
        try {
            const response = await fetch('/editor/modules/remote-control/api.php?action=getApiToken');
            const data = await response.json();
            if (data.ok) {
                currentApiToken = data.token;
                document.getElementById('rcApiToken').value = data.token;
            }
        } catch (e) {
            console.error('Error loading API token:', e);
        }
    }
    
    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    async function copyApiToken() {
        const tokenInput = document.getElementById('rcApiToken');
        const btn = document.getElementById('copyTokenBtn');
        
        try {
            await navigator.clipboard.writeText(tokenInput.value);
            btn.textContent = '‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ';
            btn.style.background = '#10b981';
            setTimeout(() => {
                btn.textContent = 'üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å';
                btn.style.background = '';
            }, 2000);
        } catch (err) {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            tokenInput.select();
            document.execCommand('copy');
            btn.textContent = '‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ';
            setTimeout(() => {
                btn.textContent = 'üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å';
            }, 2000);
        }
    }
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
    async function regenerateToken() {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –°—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤—Å–µ—Ö —Å–∞–π—Ç–∞—Ö!')) return;
        
        try {
            const fd = new FormData();
            fd.append('action', 'regenerateToken');
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                currentApiToken = data.token;
                document.getElementById('rcApiToken').value = data.token;
                alert('–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º.');
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞');
        }
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤
    async function loadSites() {
        try {
            const response = await fetch('/editor/modules/remote-control/api.php?action=getSites');
            const data = await response.json();
            
            if (data.ok) {
                renderSitesList(data.sites);
                renderSitesCheckboxes(data.sites);
            }
        } catch (e) {
            console.error('Error loading sites:', e);
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤
    function renderSitesList(sites) {
        const container = document.getElementById('rcSitesList');
        
        if (!sites || sites.length === 0) {
            container.innerHTML = '<p style="color: #6b7280;">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤</p>';
            return;
        }
        
        container.innerHTML = sites.map(site => `
            <div class="rc-site-item" data-id="${site.id}" data-domain="${site.domain}">
                <div class="rc-site-info">
                    <strong>${site.site_name || site.domain}</strong>
                    <span>${site.domain}</span>
                    <small>–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${site.last_check || '–Ω–∏–∫–æ–≥–¥–∞'}</small>
                </div>
                <div class="rc-site-actions">
                    <button class="rc-btn small" onclick="window.rcCheckSite('${site.domain}')">üîå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
                    <button class="rc-btn small danger" onclick="window.rcDeleteSite(${site.id})">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        `).join('');
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∞–π—Ç–æ–≤
    function renderSitesCheckboxes(sites) {
        const filesList = document.getElementById('rcFileSitesList');
        const linksList = document.getElementById('rcLinkSitesList');
        
        if (!sites || sites.length === 0) {
            const msg = '<p style="color: #6b7280;">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∞–π—Ç–æ–≤</p>';
            filesList.innerHTML = msg;
            linksList.innerHTML = msg;
            return;
        }
        
        const filesCheckboxesHtml = sites.map(site => `
            <label class="rc-checkbox-item">
                <input type="checkbox" value="${site.domain}" onchange="window.rcUpdateSelectedDomains(this)">
                <span>${site.site_name || site.domain} (${site.domain})</span>
            </label>
        `).join('');
        
        const linksCheckboxesHtml = sites.map(site => `
            <label class="rc-checkbox-item">
                <input type="checkbox" value="${site.domain}" onchange="window.rcUpdateSelectedDomainsLinks(this)">
                <span>${site.site_name || site.domain} (${site.domain})</span>
            </label>
        `).join('');
        
        filesList.innerHTML = filesCheckboxesHtml;
        linksList.innerHTML = linksCheckboxesHtml;
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞
    async function addRemoteSite() {
        const domain = document.getElementById('rcNewDomain').value.trim();
        const name = document.getElementById('rcNewSiteName').value.trim() || domain;
        
        if (!domain) {
            alert('–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω —Å–∞–π—Ç–∞');
            return;
        }
        
        try {
            const fd = new FormData();
            fd.append('action', 'addSite');
            fd.append('domain', domain);
            fd.append('name', name);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                document.getElementById('rcNewDomain').value = '';
                document.getElementById('rcNewSiteName').value = '';
                await loadSites();
                alert('–°–∞–π—Ç –¥–æ–±–∞–≤–ª–µ–Ω! –ü—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–∫–µ–Ω:\n' + currentApiToken);
            } else {
                alert(data.error || '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞');
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞');
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–∞–π—Ç–æ–º
    window.rcCheckSite = async function(domain) {
        const btn = event.target;
        btn.disabled = true;
        btn.textContent = '‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'checkConnection');
            fd.append('domain', domain);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                btn.textContent = '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω';
                setTimeout(() => {
                    btn.textContent = 'üîå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
                    btn.disabled = false;
                }, 2000);
            } else {
                alert('‚ùå ' + data.error);
                btn.textContent = 'üîå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
                btn.disabled = false;
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏');
            btn.textContent = 'üîå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
            btn.disabled = false;
        }
    };
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞
    window.rcDeleteSite = async function(id) {
        if (!confirm('–£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç –∏–∑ —Å–ø–∏—Å–∫–∞?')) return;
        
        try {
            const fd = new FormData();
            fd.append('action', 'deleteSite');
            fd.append('id', id);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                await loadSites();
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
        }
    };
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è —Ñ–∞–π–ª–æ–≤
    window.rcUpdateSelectedDomains = function(checkbox) {
        selectedDomains = [];
        document.querySelectorAll('#rcFileSitesList input:checked').forEach(cb => {
            selectedDomains.push(cb.value);
        });
    };
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è —Å—Å—ã–ª–æ–∫
    window.rcUpdateSelectedDomainsLinks = function(checkbox) {
        selectedDomains = [];
        document.querySelectorAll('#rcLinkSitesList input:checked').forEach(cb => {
            selectedDomains.push(cb.value);
        });
    };
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
    async function showAllFiles() {
        if (selectedDomains.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∞–π—Ç');
            return;
        }
        
        const btn = document.getElementById('showAllFilesBtn');
        btn.disabled = true;
        btn.textContent = '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'listFiles');
            fd.append('domains', JSON.stringify(selectedDomains));
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                displayAllFiles(data.results);
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤');
        } finally {
            btn.disabled = false;
            btn.textContent = 'üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö';
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    function displayAllFiles(results) {
        const container = document.getElementById('rcAllFilesList');
        const content = document.getElementById('rcAllFilesContent');
        
        let html = '';
        let totalFiles = 0;
        
        for (const [domain, domainFiles] of Object.entries(results)) {
            if (domainFiles.error) {
                html += `<div class="rc-result-item error">‚ùå ${domain}: ${domainFiles.error}</div>`;
            } else if (Array.isArray(domainFiles) && domainFiles.length > 0) {
                totalFiles += domainFiles.length;
                html += `<div style="margin: 12px 0;">`;
                html += `<h5 style="color: #2ea8ff; margin-bottom: 8px;">${domain} (${domainFiles.length} —Ñ–∞–π–ª–æ–≤)</h5>`;
                
                domainFiles.forEach(file => {
                    const icon = getFileIcon(file.name);
                    const pagesText = file.pages.join(', ');
                    
                    html += `
                        <div style="padding: 8px; background: #0f1622; border-radius: 6px; margin-bottom: 6px; cursor: pointer;"
                             onclick="window.rcSelectFile('${file.url}', '${file.name || ''}')">
                            <div style="display: flex; align-items: center; gap: 8px;">
                                <span style="font-size: 20px;">${icon}</span>
                                <div style="flex: 1;">
                                    <strong style="color: #ffffff;">${file.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</strong>
                                    <div style="font-size: 12px; color: #6b7280; margin-top: 2px;">
                                        ${file.url}
                                    </div>
                                    <div style="font-size: 11px; color: #9ca3af; margin-top: 2px;">
                                        –°—Ç—Ä–∞–Ω–∏—Ü—ã: ${pagesText} (${file.count} —à—Ç)
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                html += `</div>`;
            } else {
                html += `<div class="rc-result-item">‚ö†Ô∏è ${domain}: —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>`;
            }
        }
        
        if (totalFiles > 0) {
            html = `<div style="margin-bottom: 12px; color: #10b981;">‚úÖ –ù–∞–π–¥–µ–Ω–æ ${totalFiles} —Ñ–∞–π–ª–æ–≤</div>` + html;
        }
        
        content.innerHTML = html;
        container.style.display = 'block';
    }
    
    // –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–º–µ–Ω—ã
    window.rcSelectFile = function(url, name) {
        document.getElementById('rcFindFile').value = url;
        currentFileUrl = url;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –∑–∞–º–µ–Ω—ã
        document.getElementById('rcReplaceFileSection').classList.remove('hidden');
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Å–µ–∫—Ü–∏–∏ –∑–∞–º–µ–Ω—ã
        document.getElementById('rcReplaceFileSection').scrollIntoView({ behavior: 'smooth' });
    };
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏
    async function showAllLinks() {
        if (selectedDomains.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∞–π—Ç');
            return;
        }
        
        const btn = document.getElementById('showAllLinksBtn');
        btn.disabled = true;
        btn.textContent = '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'listLinks');
            fd.append('domains', JSON.stringify(selectedDomains));
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                displayAllLinks(data.results);
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Å—ã–ª–æ–∫');
        } finally {
            btn.disabled = false;
            btn.textContent = 'üîó –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö';
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
    function displayAllLinks(results) {
        const container = document.getElementById('rcAllLinksList');
        const content = document.getElementById('rcAllLinksContent');
        
        let html = '';
        let totalLinks = 0;
        
        for (const [domain, domainLinks] of Object.entries(results)) {
            if (domainLinks.error) {
                html += `<div class="rc-result-item error">‚ùå ${domain}: ${domainLinks.error}</div>`;
            } else if (Array.isArray(domainLinks) && domainLinks.length > 0) {
                totalLinks += domainLinks.length;
                html += `<div style="margin: 12px 0;">`;
                html += `<h5 style="color: #2ea8ff; margin-bottom: 8px;">${domain} (${domainLinks.length} —Å—Å—ã–ª–æ–∫)</h5>`;
                
                domainLinks.forEach(link => {
                    const pagesText = link.pages.join(', ');
                    
                    html += `
                        <div style="padding: 8px; background: #0f1622; border-radius: 6px; margin-bottom: 6px; cursor: pointer;"
                             onclick="window.rcSelectLink('${link.url}')">
                            <div style="display: flex; align-items: center; gap: 8px;">
                                <span style="font-size: 20px;">üîó</span>
                                <div style="flex: 1;">
                                    <strong style="color: #ffffff;">${link.text || '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}</strong>
                                    <div style="font-size: 12px; color: #2ea8ff; margin-top: 2px;">
                                        ${link.url}
                                    </div>
                                    <div style="font-size: 11px; color: #9ca3af; margin-top: 2px;">
                                        –°—Ç—Ä–∞–Ω–∏—Ü—ã: ${pagesText} (${link.count} —à—Ç)
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                html += `</div>`;
            } else {
                html += `<div class="rc-result-item">‚ö†Ô∏è ${domain}: —Å—Å—ã–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>`;
            }
        }
        
        if (totalLinks > 0) {
            html = `<div style="margin-bottom: 12px; color: #10b981;">‚úÖ –ù–∞–π–¥–µ–Ω–æ ${totalLinks} —Å—Å—ã–ª–æ–∫</div>` + html;
        }
        
        content.innerHTML = html;
        container.style.display = 'block';
    }
    
    // –í—ã–±–æ—Ä —Å—Å—ã–ª–∫–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã
    window.rcSelectLink = function(url) {
        document.getElementById('rcOldLink').value = url;
        currentLinkUrl = url;
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Å–µ–∫—Ü–∏–∏ –∑–∞–º–µ–Ω—ã
        document.getElementById('rcOldLink').scrollIntoView({ behavior: 'smooth' });
    };
    
    // –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
    async function searchRemoteFiles() {
        const fileUrl = document.getElementById('rcFindFile').value.trim();
        if (!fileUrl) {
            alert('–£–∫–∞–∂–∏—Ç–µ URL —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞');
            return;
        }
        
        if (selectedDomains.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∞–π—Ç');
            return;
        }
        
        currentFileUrl = fileUrl;
        const btn = document.getElementById('searchFilesBtn');
        btn.disabled = true;
        btn.textContent = '‚è≥ –ü–æ–∏—Å–∫...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'searchFiles');
            fd.append('domains', JSON.stringify(selectedDomains));
            fd.append('fileUrl', fileUrl);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                displayFileResults(data.results);
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞');
        } finally {
            btn.disabled = false;
            btn.textContent = 'üîç –ù–∞–π—Ç–∏';
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    function displayFileResults(results) {
        const container = document.getElementById('rcFileResults');
        let html = '<h4>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:</h4>';
        let foundCount = 0;
        
        for (const [domain, result] of Object.entries(results)) {
            if (result.error) {
                html += `<div class="rc-result-item error">‚ùå ${domain}: ${result.error}</div>`;
            } else if (Array.isArray(result) && result.length > 0) {
                foundCount += result.length;
                html += `<div class="rc-result-item success">‚úÖ ${domain}: –Ω–∞–π–¥–µ–Ω–æ ${result.length} —Å—Ç—Ä–∞–Ω–∏—Ü</div>`;
                result.forEach(page => {
                    html += `<div class="rc-result-detail">‚Ä¢ ${page}</div>`;
                });
            } else {
                html += `<div class="rc-result-item">‚ö†Ô∏è ${domain}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</div>`;
            }
        }
        
        container.innerHTML = html;
        
        if (foundCount > 0) {
            document.getElementById('rcReplaceFileSection').classList.remove('hidden');
        } else {
            document.getElementById('rcReplaceFileSection').classList.add('hidden');
        }
    }
    
    // –ó–∞–º–µ–Ω–∞ —Ñ–∞–π–ª–∞
    async function replaceRemoteFile() {
        const oldUrl = currentFileUrl || document.getElementById('rcFindFile').value.trim();
        const fileInput = document.getElementById('rcNewFile');
        const urlInput = document.getElementById('rcNewFileUrl').value.trim();
        
        if (!oldUrl) {
            alert('–°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–º–µ–Ω—ã');
            return;
        }
        
        let newUrl = urlInput;
        let fileName = '';
        
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
        if (fileInput.files.length > 0) {
            const file = fileInput.files[0];
            fileName = file.name;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const uploadFd = new FormData();
            uploadFd.append('file', file);
            uploadFd.append('type', 'file');
            
            try {
                const uploadResponse = await fetch('/editor/api.php?action=uploadAsset&type=file', {
                    method: 'POST',
                    body: uploadFd
                });
                
                const uploadData = await uploadResponse.json();
                if (uploadData.ok) {
                    newUrl = uploadData.url;
                } else {
                    alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + (uploadData.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                    return;
                }
            } catch (e) {
                alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
                return;
            }
        }
        
        if (!newUrl) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ URL');
            return;
        }
        
        if (!confirm(`–ó–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª\n${oldUrl}\n–Ω–∞\n${newUrl}\n–Ω–∞ ${selectedDomains.length} —Å–∞–π—Ç–∞—Ö?`)) {
            return;
        }
        
        const btn = document.getElementById('replaceFileBtn');
        btn.disabled = true;
        btn.textContent = '‚è≥ –ó–∞–º–µ–Ω–∞...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'replaceFile');
            fd.append('domains', JSON.stringify(selectedDomains));
            fd.append('oldUrl', oldUrl);
            fd.append('newUrl', newUrl);
            fd.append('fileName', fileName);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                displayReplaceResults(data.results);
                // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                document.getElementById('rcFindFile').value = '';
                document.getElementById('rcNewFile').value = '';
                document.getElementById('rcNewFileUrl').value = '';
                document.getElementById('rcNewFileUrl').disabled = false;
                document.getElementById('rcReplaceFileSection').classList.add('hidden');
                document.getElementById('rcAllFilesList').style.display = 'none';
                currentFileUrl = '';
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã');
        } finally {
            btn.disabled = false;
            btn.textContent = 'üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª';
        }
    }
    
    // –ó–∞–º–µ–Ω–∞ —Å—Å—ã–ª–æ–∫
    async function replaceRemoteLinks() {
        const oldUrl = document.getElementById('rcOldLink').value.trim();
        const newUrl = document.getElementById('rcNewLink').value.trim();
        
        if (!oldUrl || !newUrl) {
            alert('–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ä—É—é –∏ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫–∏');
            return;
        }
        
        if (selectedDomains.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∞–π—Ç');
            return;
        }
        
        if (!confirm(`–ó–∞–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É\n${oldUrl}\n–Ω–∞\n${newUrl}\n–Ω–∞ ${selectedDomains.length} —Å–∞–π—Ç–∞—Ö?`)) {
            return;
        }
        
        const btn = document.getElementById('replaceLinkBtn');
        btn.disabled = true;
        btn.textContent = '‚è≥ –ó–∞–º–µ–Ω–∞...';
        
        try {
            const fd = new FormData();
            fd.append('action', 'replaceLink');
            fd.append('domains', JSON.stringify(selectedDomains));
            fd.append('oldUrl', oldUrl);
            fd.append('newUrl', newUrl);
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                displayReplaceResults(data.results, 'rcLinkResults');
                // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                document.getElementById('rcOldLink').value = '';
                document.getElementById('rcNewLink').value = '';
                document.getElementById('rcAllLinksList').style.display = 'none';
                currentLinkUrl = '';
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã');
        } finally {
            btn.disabled = false;
            btn.textContent = 'üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫–∏';
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–º–µ–Ω—ã
    function displayReplaceResults(results, containerId = 'rcFileResults') {
        const container = document.getElementById(containerId);
        let html = '<h4>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–º–µ–Ω—ã:</h4>';
        let successCount = 0;
        let errorCount = 0;
        
        for (const [domain, result] of Object.entries(results)) {
            if (result.success) {
                successCount++;
                html += `<div class="rc-result-item success">‚úÖ ${domain}: ${result.message || '–£—Å–ø–µ—à–Ω–æ'}</div>`;
            } else {
                errorCount++;
                html += `<div class="rc-result-item error">‚ùå ${domain}: ${result.message || '–û—à–∏–±–∫–∞'}</div>`;
            }
        }
        
        if (successCount > 0) {
            html = `<div style="margin-bottom: 12px; color: #10b981; font-weight: bold;">
                        ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${successCount} —Å–∞–π—Ç–æ–≤
                    </div>` + html;
        }
        
        container.innerHTML = html;
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
    async function loadHistory() {
        try {
            const response = await fetch('/editor/modules/remote-control/api.php?action=getHistory&limit=100');
            const data = await response.json();
            
            if (data.ok) {
                renderHistory(data.history);
            }
        } catch (e) {
            console.error('Error loading history:', e);
        }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    function renderHistory(history) {
        const container = document.getElementById('rcHistoryList');
        
        if (!history || history.length === 0) {
            container.innerHTML = '<p style="color: #6b7280;">–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</p>';
            return;
        }
        
        container.innerHTML = history.map(item => {
            const statusIcon = item.status === 'success' ? '‚úÖ' : '‚ùå';
            const typeIcon = item.change_type === 'file' ? 'üìÑ' : 'üîó';
            
            return `
                <div class="rc-history-item ${item.status}">
                    <div style="display: flex; justify-content: space-between; margin-bottom: 4px;">
                        <strong>${statusIcon} ${typeIcon} ${item.domain}</strong>
                        <small>${new Date(item.created_at).toLocaleString()}</small>
                    </div>
                    <div style="color: #9ca3af; font-size: 13px;">
                        ${item.old_value} ‚Üí ${item.new_value}
                        ${item.error_message ? '<br>–û—à–∏–±–∫–∞: ' + item.error_message : ''}
                    </div>
                </div>
            `;
        }).join('');
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π –∏—Å—Ç–æ—Ä–∏–∏
    async function clearOldHistory() {
        if (!confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π?')) return;
        
        try {
            const fd = new FormData();
            fd.append('action', 'clearHistory');
            fd.append('days', '30');
            
            const response = await fetch('/editor/modules/remote-control/api.php', {
                method: 'POST',
                body: fd
            });
            
            const data = await response.json();
            if (data.ok) {
                await loadHistory();
                alert('–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ' + data.deleted);
            }
        } catch (e) {
            alert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏');
        }
    }
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
    window.openRemoteModal = function() {
        createRemoteModal();
    };
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞
    const btn = document.getElementById('btnRemoteSites');
    if (btn) {
        btn.addEventListener('click', function() {
            window.openRemoteModal();
        });
    }
})();